$date
	Wed May 26 21:20:12 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module fp_adder_tb $end
$var wire 4 ! exp1 [3:0] $end
$var wire 4 " exp2 [3:0] $end
$var wire 8 # frac1 [7:0] $end
$var wire 8 $ frac2 [7:0] $end
$var wire 1 % sign1 $end
$var wire 1 & sign2 $end
$var wire 1 ' sign_out $end
$var wire 8 ( frac_out [7:0] $end
$var wire 4 ) exp_out [3:0] $end
$scope module fp_unit $end
$var wire 4 * exp1 [3:0] $end
$var wire 4 + exp2 [3:0] $end
$var wire 8 , frac1 [7:0] $end
$var wire 8 - frac2 [7:0] $end
$var wire 1 % sign1 $end
$var wire 1 & sign2 $end
$var reg 4 . exp_diff [3:0] $end
$var reg 4 / exp_out [3:0] $end
$var reg 4 0 expb [3:0] $end
$var reg 4 1 exps [3:0] $end
$var reg 8 2 frac_out [7:0] $end
$var reg 8 3 fracb [7:0] $end
$var reg 8 4 fracs [7:0] $end
$var reg 1 ' sign_out $end
$var reg 1 5 signb $end
$var reg 1 6 signs $end
$var reg 9 7 sum [8:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b11001000 7
06
05
b1000100 4
b10000100 3
b11001000 2
b100 1
b100 0
b100 /
b1 .
b10001000 -
b10000100 ,
b11 +
b100 *
b100 )
b11001000 (
0'
0&
0%
b10001000 $
b10000100 #
b11 "
b100 !
$end
